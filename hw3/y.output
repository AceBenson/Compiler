   0  $accept : exts $end

   1  exts : ext
   2       | exts ext

   3  ext : function_definition
   4      | declaration

   5  $$1 :

   6  function_definition : declaration_specifiers func_definitor $$1 compound_statement

   7  $$2 :

   8  function_definition : declaration_specifiers func_definitor declaration_list $$2 compound_statement

   9  $$3 :

  10  function_definition : func_definitor $$3 compound_statement

  11  $$4 :

  12  function_definition : func_definitor declaration_list $$4 compound_statement

  13  declaration_list : declaration
  14                   | declaration_list declaration

  15  $$5 :

  16  $$6 :

  17  compound_statement : '{' $$5 $$6 '}'

  18  $$7 :

  19  $$8 :

  20  compound_statement : '{' $$7 compound_list $$8 '}'

  21  compound_list : statement
  22                | declaration
  23                | compound_list statement
  24                | compound_list declaration

  25  statement : compound_statement
  26            | expression_statement
  27            | selection_statement
  28            | labeled_statement
  29            | iteration_statement
  30            | jump_statement

  31  labeled_statement : IDENTIFIER ':' statement
  32                    | CASE conditional_expression ':' statement
  33                    | DEFAULT ':' statement

  34  $$9 :

  35  selection_statement : IF '(' expression ')' $$9 compound_statement

  36  $$10 :

  37  selection_statement : selection_statement ELSE $$10 compound_statement

  38  $$11 :

  39  selection_statement : SWITCH '(' expression ')' $$11 compound_statement

  40  $$12 :

  41  iteration_statement : WHILE '(' expression ')' $$12 statement
  42                      | DO statement WHILE '(' expression ')' ';'
  43                      | FOR '(' expression_statement expression_statement ')' statement
  44                      | FOR '(' expression_statement expression_statement expression ')' statement

  45  jump_statement : CONTINUE ';'
  46                 | BREAK ';'
  47                 | RETURN ';'
  48                 | RETURN expression ';'

  49  expression_statement : ';'
  50                       | expression ';'

  51  declaration : declaration_specifiers ';'
  52              | declaration_specifiers init_declarator_list ';'

  53  declaration_specifiers : type_specifier
  54                         | type_specifier declaration_specifiers
  55                         | CONST declaration_specifiers

  56  type_specifier : VOID
  57                 | CHAR
  58                 | SHORT
  59                 | INT
  60                 | LONG
  61                 | FLOAT
  62                 | DOUBLE
  63                 | SIGNED
  64                 | UNSIGNED

  65  init_declarator_list : init_declarator
  66                       | init_declarator_list ',' init_declarator

  67  init_declarator : declarator
  68                  | func_definitor
  69                  | declarator '=' initializer

  70  $$13 :

  71  func_definitor : IDENTIFIER $$13 func_param_list

  72  $$14 :

  73  func_param_list : '(' $$14 parameter_type_list ')'
  74                  | '(' ')'

  75  declarator : direct_declarator

  76  direct_declarator : IDENTIFIER
  77                    | '(' declarator ')'
  78                    | direct_declarator '[' conditional_expression ']'

  79  parameter_type_list : parameter_list
  80                      | parameter_list ',' ELLIPSIS

  81  parameter_list : parameter_declaration
  82                 | parameter_list ',' parameter_declaration

  83  parameter_declaration : declaration_specifiers declarator
  84                        | declaration_specifiers

  85  initializer : assignment_expression
  86              | '{' initializer_list '}'
  87              | '{' initializer_list ',' '}'

  88  initializer_list : initializer
  89                   | initializer_list ',' initializer

  90  expression : assignment_expression
  91             | expression ',' assignment_expression

  92  assignment_expression : conditional_expression
  93                        | unary_expression assignment_operator assignment_expression

  94  assignment_operator : '='
  95                      | MUL_ASSIGN
  96                      | DIV_ASSIGN
  97                      | MOD_ASSIGN
  98                      | ADD_ASSIGN
  99                      | SUB_ASSIGN

 100  conditional_expression : logical_or_expression
 101                         | logical_or_expression '?' expression ':' conditional_expression

 102  logical_or_expression : logical_and_expression
 103                        | logical_or_expression OR_OP logical_and_expression

 104  logical_and_expression : inclusive_or_expression
 105                         | logical_and_expression AND_OP inclusive_or_expression

 106  inclusive_or_expression : exclusive_or_expression
 107                          | inclusive_or_expression '|' exclusive_or_expression

 108  exclusive_or_expression : and_expression
 109                          | exclusive_or_expression '^' and_expression

 110  and_expression : equality_expression
 111                 | and_expression '&' equality_expression

 112  equality_expression : relational_expression
 113                      | equality_expression EQ_OP relational_expression
 114                      | equality_expression NE_OP relational_expression

 115  relational_expression : shift_expression
 116                        | relational_expression '<' shift_expression
 117                        | relational_expression '>' shift_expression
 118                        | relational_expression LE_OP shift_expression
 119                        | relational_expression GE_OP shift_expression

 120  shift_expression : additive_expression
 121                   | shift_expression LEFT_OP additive_expression
 122                   | shift_expression RIGHT_OP additive_expression

 123  additive_expression : additive_expression '+' multiplicative_expression
 124                      | additive_expression '-' multiplicative_expression
 125                      | multiplicative_expression

 126  multiplicative_expression : multiplicative_expression '*' cast_expression
 127                            | multiplicative_expression '/' cast_expression
 128                            | multiplicative_expression '%' cast_expression
 129                            | cast_expression

 130  cast_expression : unary_expression
 131                  | '(' type_specifier ')' cast_expression

 132  unary_expression : postfix_expression
 133                   | INC_OP unary_expression
 134                   | DEC_OP unary_expression
 135                   | unary_operator cast_expression

 136  unary_operator : '&'
 137                 | '*'
 138                 | '+'
 139                 | '-'
 140                 | '~'
 141                 | '!'

 142  postfix_expression : primary_expression
 143                     | FUNCTION
 144                     | postfix_expression '[' expression ']'
 145                     | postfix_expression '(' ')'
 146                     | postfix_expression '(' argument_expression_list ')'
 147                     | postfix_expression INC_OP
 148                     | postfix_expression DEC_OP

 149  argument_expression_list : assignment_expression
 150                           | argument_expression_list ',' assignment_expression

 151  primary_expression : '(' expression ')'
 152                     | CONSTANT
 153                     | CCONSTANT
 154                     | FCONSTANT
 155                     | IDENTIFIER
 156                     | STRING_LITERAL

state 0
	$accept : . exts $end  (0)

	IDENTIFIER  shift 1
	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	.  error

	exts  goto 12
	func_definitor  goto 13
	declaration  goto 14
	declaration_specifiers  goto 15
	type_specifier  goto 16
	function_definition  goto 17
	ext  goto 18


state 1
	func_definitor : IDENTIFIER . $$13 func_param_list  (71)
	$$13 : .  (70)

	.  reduce 70

	$$13  goto 19


state 2
	type_specifier : CHAR .  (57)

	.  reduce 57


state 3
	type_specifier : SHORT .  (58)

	.  reduce 58


state 4
	type_specifier : INT .  (59)

	.  reduce 59


state 5
	type_specifier : LONG .  (60)

	.  reduce 60


state 6
	type_specifier : SIGNED .  (63)

	.  reduce 63


state 7
	type_specifier : UNSIGNED .  (64)

	.  reduce 64


state 8
	type_specifier : FLOAT .  (61)

	.  reduce 61


state 9
	type_specifier : DOUBLE .  (62)

	.  reduce 62


state 10
	declaration_specifiers : CONST . declaration_specifiers  (55)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	.  error

	declaration_specifiers  goto 20
	type_specifier  goto 16


state 11
	type_specifier : VOID .  (56)

	.  reduce 56


state 12
	$accept : exts . $end  (0)
	exts : exts . ext  (2)

	$end  accept
	IDENTIFIER  shift 1
	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	.  error

	func_definitor  goto 13
	declaration  goto 14
	declaration_specifiers  goto 15
	type_specifier  goto 16
	function_definition  goto 17
	ext  goto 21


state 13
	function_definition : func_definitor . $$3 compound_statement  (10)
	function_definition : func_definitor . declaration_list $$4 compound_statement  (12)
	$$3 : .  (9)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	'{'  reduce 9

	declaration  goto 22
	declaration_specifiers  goto 23
	type_specifier  goto 16
	declaration_list  goto 24
	$$3  goto 25


state 14
	ext : declaration .  (4)

	.  reduce 4


state 15
	function_definition : declaration_specifiers . func_definitor $$1 compound_statement  (6)
	function_definition : declaration_specifiers . func_definitor declaration_list $$2 compound_statement  (8)
	declaration : declaration_specifiers . ';'  (51)
	declaration : declaration_specifiers . init_declarator_list ';'  (52)

	IDENTIFIER  shift 26
	';'  shift 27
	'('  shift 28
	.  error

	func_definitor  goto 29
	init_declarator_list  goto 30
	init_declarator  goto 31
	declarator  goto 32
	direct_declarator  goto 33


state 16
	declaration_specifiers : type_specifier .  (53)
	declaration_specifiers : type_specifier . declaration_specifiers  (54)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	IDENTIFIER  reduce 53
	';'  reduce 53
	','  reduce 53
	'('  reduce 53
	')'  reduce 53

	declaration_specifiers  goto 34
	type_specifier  goto 16


state 17
	ext : function_definition .  (3)

	.  reduce 3


state 18
	exts : ext .  (1)

	.  reduce 1


state 19
	func_definitor : IDENTIFIER $$13 . func_param_list  (71)

	'('  shift 35
	.  error

	func_param_list  goto 36


state 20
	declaration_specifiers : CONST declaration_specifiers .  (55)

	.  reduce 55


state 21
	exts : exts ext .  (2)

	.  reduce 2


state 22
	declaration_list : declaration .  (13)

	.  reduce 13


state 23
	declaration : declaration_specifiers . ';'  (51)
	declaration : declaration_specifiers . init_declarator_list ';'  (52)

	IDENTIFIER  shift 26
	';'  shift 27
	'('  shift 28
	.  error

	func_definitor  goto 37
	init_declarator_list  goto 30
	init_declarator  goto 31
	declarator  goto 32
	direct_declarator  goto 33


state 24
	function_definition : func_definitor declaration_list . $$4 compound_statement  (12)
	declaration_list : declaration_list . declaration  (14)
	$$4 : .  (11)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	'{'  reduce 11

	declaration  goto 38
	declaration_specifiers  goto 23
	type_specifier  goto 16
	$$4  goto 39


state 25
	function_definition : func_definitor $$3 . compound_statement  (10)

	'{'  shift 40
	.  error

	compound_statement  goto 41


state 26
	func_definitor : IDENTIFIER . $$13 func_param_list  (71)
	direct_declarator : IDENTIFIER .  (76)
	$$13 : .  (70)

	';'  reduce 76
	','  reduce 76
	'='  reduce 76
	'('  reduce 70
	'['  reduce 76

	$$13  goto 19


state 27
	declaration : declaration_specifiers ';' .  (51)

	.  reduce 51


state 28
	direct_declarator : '(' . declarator ')'  (77)

	IDENTIFIER  shift 42
	'('  shift 28
	.  error

	declarator  goto 43
	direct_declarator  goto 33


state 29
	function_definition : declaration_specifiers func_definitor . $$1 compound_statement  (6)
	function_definition : declaration_specifiers func_definitor . declaration_list $$2 compound_statement  (8)
	init_declarator : func_definitor .  (68)
	$$1 : .  (5)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	';'  reduce 68
	','  reduce 68
	'{'  reduce 5

	declaration  goto 22
	declaration_specifiers  goto 23
	type_specifier  goto 16
	declaration_list  goto 44
	$$1  goto 45


state 30
	declaration : declaration_specifiers init_declarator_list . ';'  (52)
	init_declarator_list : init_declarator_list . ',' init_declarator  (66)

	';'  shift 46
	','  shift 47
	.  error


state 31
	init_declarator_list : init_declarator .  (65)

	.  reduce 65


state 32
	init_declarator : declarator .  (67)
	init_declarator : declarator . '=' initializer  (69)

	'='  shift 48
	';'  reduce 67
	','  reduce 67


state 33
	declarator : direct_declarator .  (75)
	direct_declarator : direct_declarator . '[' conditional_expression ']'  (78)

	'['  shift 49
	';'  reduce 75
	','  reduce 75
	'='  reduce 75
	')'  reduce 75


state 34
	declaration_specifiers : type_specifier declaration_specifiers .  (54)

	.  reduce 54


state 35
	func_param_list : '(' . $$14 parameter_type_list ')'  (73)
	func_param_list : '(' . ')'  (74)
	$$14 : .  (72)

	')'  shift 50
	CHAR  reduce 72
	SHORT  reduce 72
	INT  reduce 72
	LONG  reduce 72
	SIGNED  reduce 72
	UNSIGNED  reduce 72
	FLOAT  reduce 72
	DOUBLE  reduce 72
	CONST  reduce 72
	VOID  reduce 72

	$$14  goto 51


state 36
	func_definitor : IDENTIFIER $$13 func_param_list .  (71)

	.  reduce 71


state 37
	init_declarator : func_definitor .  (68)

	.  reduce 68


state 38
	declaration_list : declaration_list declaration .  (14)

	.  reduce 14


state 39
	function_definition : func_definitor declaration_list $$4 . compound_statement  (12)

	'{'  shift 40
	.  error

	compound_statement  goto 52


state 40
	compound_statement : '{' . $$5 $$6 '}'  (17)
	compound_statement : '{' . $$7 compound_list $$8 '}'  (20)
	$$5 : .  (15)
	$$7 : .  (18)

	IDENTIFIER  reduce 18
	FCONSTANT  reduce 18
	CONSTANT  reduce 18
	CCONSTANT  reduce 18
	STRING_LITERAL  reduce 18
	INC_OP  reduce 18
	DEC_OP  reduce 18
	CHAR  reduce 18
	SHORT  reduce 18
	INT  reduce 18
	LONG  reduce 18
	SIGNED  reduce 18
	UNSIGNED  reduce 18
	FLOAT  reduce 18
	DOUBLE  reduce 18
	CONST  reduce 18
	VOID  reduce 18
	CASE  reduce 18
	DEFAULT  reduce 18
	IF  reduce 18
	SWITCH  reduce 18
	WHILE  reduce 18
	DO  reduce 18
	FOR  reduce 18
	CONTINUE  reduce 18
	BREAK  reduce 18
	RETURN  reduce 18
	FUNCTION  reduce 18
	';'  reduce 18
	'&'  reduce 18
	'+'  reduce 18
	'-'  reduce 18
	'*'  reduce 18
	'{'  reduce 18
	'}'  reduce 15
	'('  reduce 18
	'~'  reduce 18
	'!'  reduce 18

	$$5  goto 53
	$$7  goto 54


state 41
	function_definition : func_definitor $$3 compound_statement .  (10)

	.  reduce 10


state 42
	direct_declarator : IDENTIFIER .  (76)

	.  reduce 76


state 43
	direct_declarator : '(' declarator . ')'  (77)

	')'  shift 55
	.  error


state 44
	function_definition : declaration_specifiers func_definitor declaration_list . $$2 compound_statement  (8)
	declaration_list : declaration_list . declaration  (14)
	$$2 : .  (7)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	'{'  reduce 7

	declaration  goto 38
	declaration_specifiers  goto 23
	type_specifier  goto 16
	$$2  goto 56


state 45
	function_definition : declaration_specifiers func_definitor $$1 . compound_statement  (6)

	'{'  shift 40
	.  error

	compound_statement  goto 57


state 46
	declaration : declaration_specifiers init_declarator_list ';' .  (52)

	.  reduce 52


state 47
	init_declarator_list : init_declarator_list ',' . init_declarator  (66)

	IDENTIFIER  shift 26
	'('  shift 28
	.  error

	func_definitor  goto 37
	init_declarator  goto 58
	declarator  goto 32
	direct_declarator  goto 33


state 48
	init_declarator : declarator '=' . initializer  (69)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 71
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 91
	initializer  goto 92


state 49
	direct_declarator : direct_declarator '[' . conditional_expression ']'  (78)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 94


state 50
	func_param_list : '(' ')' .  (74)

	.  reduce 74


state 51
	func_param_list : '(' $$14 . parameter_type_list ')'  (73)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	.  error

	declaration_specifiers  goto 95
	type_specifier  goto 16
	parameter_type_list  goto 96
	parameter_list  goto 97
	parameter_declaration  goto 98


state 52
	function_definition : func_definitor declaration_list $$4 compound_statement .  (12)

	.  reduce 12


state 53
	compound_statement : '{' $$5 . $$6 '}'  (17)
	$$6 : .  (16)

	.  reduce 16

	$$6  goto 99


state 54
	compound_statement : '{' $$7 . compound_list $$8 '}'  (20)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 115
	compound_statement  goto 116
	compound_list  goto 117
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121
	declaration  goto 122
	declaration_specifiers  goto 23
	type_specifier  goto 16


state 55
	direct_declarator : '(' declarator ')' .  (77)

	.  reduce 77


state 56
	function_definition : declaration_specifiers func_definitor declaration_list $$2 . compound_statement  (8)

	'{'  shift 40
	.  error

	compound_statement  goto 123


state 57
	function_definition : declaration_specifiers func_definitor $$1 compound_statement .  (6)

	.  reduce 6


state 58
	init_declarator_list : init_declarator_list ',' init_declarator .  (66)

	.  reduce 66


state 59
	primary_expression : IDENTIFIER .  (155)

	.  reduce 155


state 60
	primary_expression : FCONSTANT .  (154)

	.  reduce 154


state 61
	primary_expression : CONSTANT .  (152)

	.  reduce 152


state 62
	primary_expression : CCONSTANT .  (153)

	.  reduce 153


state 63
	primary_expression : STRING_LITERAL .  (156)

	.  reduce 156


state 64
	unary_expression : INC_OP . unary_expression  (133)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 124
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 125


state 65
	unary_expression : DEC_OP . unary_expression  (134)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 124
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 126


state 66
	postfix_expression : FUNCTION .  (143)

	.  reduce 143


state 67
	unary_operator : '&' .  (136)

	.  reduce 136


state 68
	unary_operator : '+' .  (138)

	.  reduce 138


state 69
	unary_operator : '-' .  (139)

	.  reduce 139


state 70
	unary_operator : '*' .  (137)

	.  reduce 137


state 71
	initializer : '{' . initializer_list '}'  (86)
	initializer : '{' . initializer_list ',' '}'  (87)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 71
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 91
	initializer  goto 127
	initializer_list  goto 128


state 72
	cast_expression : '(' . type_specifier ')' cast_expression  (131)
	primary_expression : '(' . expression ')'  (151)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	VOID  shift 11
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 129
	type_specifier  goto 130


state 73
	unary_operator : '~' .  (140)

	.  reduce 140


state 74
	unary_operator : '!' .  (141)

	.  reduce 141


state 75
	postfix_expression : primary_expression .  (142)

	.  reduce 142


state 76
	unary_expression : postfix_expression .  (132)
	postfix_expression : postfix_expression . '[' expression ']'  (144)
	postfix_expression : postfix_expression . '(' ')'  (145)
	postfix_expression : postfix_expression . '(' argument_expression_list ')'  (146)
	postfix_expression : postfix_expression . INC_OP  (147)
	postfix_expression : postfix_expression . DEC_OP  (148)

	INC_OP  shift 131
	DEC_OP  shift 132
	'('  shift 133
	'['  shift 134
	LEFT_OP  reduce 132
	RIGHT_OP  reduce 132
	LE_OP  reduce 132
	GE_OP  reduce 132
	EQ_OP  reduce 132
	NE_OP  reduce 132
	AND_OP  reduce 132
	OR_OP  reduce 132
	MUL_ASSIGN  reduce 132
	DIV_ASSIGN  reduce 132
	MOD_ASSIGN  reduce 132
	ADD_ASSIGN  reduce 132
	SUB_ASSIGN  reduce 132
	';'  reduce 132
	','  reduce 132
	'='  reduce 132
	'?'  reduce 132
	':'  reduce 132
	'|'  reduce 132
	'^'  reduce 132
	'&'  reduce 132
	'>'  reduce 132
	'<'  reduce 132
	'+'  reduce 132
	'-'  reduce 132
	'*'  reduce 132
	'/'  reduce 132
	'%'  reduce 132
	'}'  reduce 132
	')'  reduce 132
	']'  reduce 132


state 77
	unary_expression : unary_operator . cast_expression  (135)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 135


state 78
	assignment_expression : unary_expression . assignment_operator assignment_expression  (93)
	cast_expression : unary_expression .  (130)

	MUL_ASSIGN  shift 136
	DIV_ASSIGN  shift 137
	MOD_ASSIGN  shift 138
	ADD_ASSIGN  shift 139
	SUB_ASSIGN  shift 140
	'='  shift 141
	LEFT_OP  reduce 130
	RIGHT_OP  reduce 130
	LE_OP  reduce 130
	GE_OP  reduce 130
	EQ_OP  reduce 130
	NE_OP  reduce 130
	AND_OP  reduce 130
	OR_OP  reduce 130
	';'  reduce 130
	','  reduce 130
	'?'  reduce 130
	':'  reduce 130
	'|'  reduce 130
	'^'  reduce 130
	'&'  reduce 130
	'>'  reduce 130
	'<'  reduce 130
	'+'  reduce 130
	'-'  reduce 130
	'*'  reduce 130
	'/'  reduce 130
	'%'  reduce 130
	'}'  reduce 130
	')'  reduce 130
	']'  reduce 130

	assignment_operator  goto 142


state 79
	multiplicative_expression : cast_expression .  (129)

	.  reduce 129


state 80
	additive_expression : multiplicative_expression .  (125)
	multiplicative_expression : multiplicative_expression . '*' cast_expression  (126)
	multiplicative_expression : multiplicative_expression . '/' cast_expression  (127)
	multiplicative_expression : multiplicative_expression . '%' cast_expression  (128)

	'*'  shift 143
	'/'  shift 144
	'%'  shift 145
	LEFT_OP  reduce 125
	RIGHT_OP  reduce 125
	LE_OP  reduce 125
	GE_OP  reduce 125
	EQ_OP  reduce 125
	NE_OP  reduce 125
	AND_OP  reduce 125
	OR_OP  reduce 125
	';'  reduce 125
	','  reduce 125
	'?'  reduce 125
	':'  reduce 125
	'|'  reduce 125
	'^'  reduce 125
	'&'  reduce 125
	'>'  reduce 125
	'<'  reduce 125
	'+'  reduce 125
	'-'  reduce 125
	'}'  reduce 125
	')'  reduce 125
	']'  reduce 125


state 81
	shift_expression : additive_expression .  (120)
	additive_expression : additive_expression . '+' multiplicative_expression  (123)
	additive_expression : additive_expression . '-' multiplicative_expression  (124)

	'+'  shift 146
	'-'  shift 147
	LEFT_OP  reduce 120
	RIGHT_OP  reduce 120
	LE_OP  reduce 120
	GE_OP  reduce 120
	EQ_OP  reduce 120
	NE_OP  reduce 120
	AND_OP  reduce 120
	OR_OP  reduce 120
	';'  reduce 120
	','  reduce 120
	'?'  reduce 120
	':'  reduce 120
	'|'  reduce 120
	'^'  reduce 120
	'&'  reduce 120
	'>'  reduce 120
	'<'  reduce 120
	'}'  reduce 120
	')'  reduce 120
	']'  reduce 120


state 82
	relational_expression : shift_expression .  (115)
	shift_expression : shift_expression . LEFT_OP additive_expression  (121)
	shift_expression : shift_expression . RIGHT_OP additive_expression  (122)

	LEFT_OP  shift 148
	RIGHT_OP  shift 149
	LE_OP  reduce 115
	GE_OP  reduce 115
	EQ_OP  reduce 115
	NE_OP  reduce 115
	AND_OP  reduce 115
	OR_OP  reduce 115
	';'  reduce 115
	','  reduce 115
	'?'  reduce 115
	':'  reduce 115
	'|'  reduce 115
	'^'  reduce 115
	'&'  reduce 115
	'>'  reduce 115
	'<'  reduce 115
	'}'  reduce 115
	')'  reduce 115
	']'  reduce 115


state 83
	equality_expression : relational_expression .  (112)
	relational_expression : relational_expression . '<' shift_expression  (116)
	relational_expression : relational_expression . '>' shift_expression  (117)
	relational_expression : relational_expression . LE_OP shift_expression  (118)
	relational_expression : relational_expression . GE_OP shift_expression  (119)

	LE_OP  shift 150
	GE_OP  shift 151
	'>'  shift 152
	'<'  shift 153
	EQ_OP  reduce 112
	NE_OP  reduce 112
	AND_OP  reduce 112
	OR_OP  reduce 112
	';'  reduce 112
	','  reduce 112
	'?'  reduce 112
	':'  reduce 112
	'|'  reduce 112
	'^'  reduce 112
	'&'  reduce 112
	'}'  reduce 112
	')'  reduce 112
	']'  reduce 112


state 84
	and_expression : equality_expression .  (110)
	equality_expression : equality_expression . EQ_OP relational_expression  (113)
	equality_expression : equality_expression . NE_OP relational_expression  (114)

	EQ_OP  shift 154
	NE_OP  shift 155
	AND_OP  reduce 110
	OR_OP  reduce 110
	';'  reduce 110
	','  reduce 110
	'?'  reduce 110
	':'  reduce 110
	'|'  reduce 110
	'^'  reduce 110
	'&'  reduce 110
	'}'  reduce 110
	')'  reduce 110
	']'  reduce 110


state 85
	exclusive_or_expression : and_expression .  (108)
	and_expression : and_expression . '&' equality_expression  (111)

	'&'  shift 156
	AND_OP  reduce 108
	OR_OP  reduce 108
	';'  reduce 108
	','  reduce 108
	'?'  reduce 108
	':'  reduce 108
	'|'  reduce 108
	'^'  reduce 108
	'}'  reduce 108
	')'  reduce 108
	']'  reduce 108


state 86
	inclusive_or_expression : exclusive_or_expression .  (106)
	exclusive_or_expression : exclusive_or_expression . '^' and_expression  (109)

	'^'  shift 157
	AND_OP  reduce 106
	OR_OP  reduce 106
	';'  reduce 106
	','  reduce 106
	'?'  reduce 106
	':'  reduce 106
	'|'  reduce 106
	'}'  reduce 106
	')'  reduce 106
	']'  reduce 106


state 87
	logical_and_expression : inclusive_or_expression .  (104)
	inclusive_or_expression : inclusive_or_expression . '|' exclusive_or_expression  (107)

	'|'  shift 158
	AND_OP  reduce 104
	OR_OP  reduce 104
	';'  reduce 104
	','  reduce 104
	'?'  reduce 104
	':'  reduce 104
	'}'  reduce 104
	')'  reduce 104
	']'  reduce 104


state 88
	logical_or_expression : logical_and_expression .  (102)
	logical_and_expression : logical_and_expression . AND_OP inclusive_or_expression  (105)

	AND_OP  shift 159
	OR_OP  reduce 102
	';'  reduce 102
	','  reduce 102
	'?'  reduce 102
	':'  reduce 102
	'}'  reduce 102
	')'  reduce 102
	']'  reduce 102


state 89
	conditional_expression : logical_or_expression .  (100)
	conditional_expression : logical_or_expression . '?' expression ':' conditional_expression  (101)
	logical_or_expression : logical_or_expression . OR_OP logical_and_expression  (103)

	OR_OP  shift 160
	'?'  shift 161
	';'  reduce 100
	','  reduce 100
	':'  reduce 100
	'}'  reduce 100
	')'  reduce 100
	']'  reduce 100


state 90
	assignment_expression : conditional_expression .  (92)

	.  reduce 92


state 91
	initializer : assignment_expression .  (85)

	.  reduce 85


state 92
	init_declarator : declarator '=' initializer .  (69)

	.  reduce 69


state 93
	cast_expression : unary_expression .  (130)

	.  reduce 130


state 94
	direct_declarator : direct_declarator '[' conditional_expression . ']'  (78)

	']'  shift 162
	.  error


state 95
	parameter_declaration : declaration_specifiers . declarator  (83)
	parameter_declaration : declaration_specifiers .  (84)

	IDENTIFIER  shift 42
	'('  shift 28
	','  reduce 84
	')'  reduce 84

	declarator  goto 163
	direct_declarator  goto 33


state 96
	func_param_list : '(' $$14 parameter_type_list . ')'  (73)

	')'  shift 164
	.  error


state 97
	parameter_type_list : parameter_list .  (79)
	parameter_type_list : parameter_list . ',' ELLIPSIS  (80)
	parameter_list : parameter_list . ',' parameter_declaration  (82)

	','  shift 165
	')'  reduce 79


state 98
	parameter_list : parameter_declaration .  (81)

	.  reduce 81


state 99
	compound_statement : '{' $$5 $$6 . '}'  (17)

	'}'  shift 166
	.  error


state 100
	labeled_statement : IDENTIFIER . ':' statement  (31)
	primary_expression : IDENTIFIER .  (155)

	':'  shift 167
	INC_OP  reduce 155
	DEC_OP  reduce 155
	LEFT_OP  reduce 155
	RIGHT_OP  reduce 155
	LE_OP  reduce 155
	GE_OP  reduce 155
	EQ_OP  reduce 155
	NE_OP  reduce 155
	AND_OP  reduce 155
	OR_OP  reduce 155
	MUL_ASSIGN  reduce 155
	DIV_ASSIGN  reduce 155
	MOD_ASSIGN  reduce 155
	ADD_ASSIGN  reduce 155
	SUB_ASSIGN  reduce 155
	';'  reduce 155
	','  reduce 155
	'='  reduce 155
	'?'  reduce 155
	'|'  reduce 155
	'^'  reduce 155
	'&'  reduce 155
	'>'  reduce 155
	'<'  reduce 155
	'+'  reduce 155
	'-'  reduce 155
	'*'  reduce 155
	'/'  reduce 155
	'%'  reduce 155
	'('  reduce 155
	'['  reduce 155


state 101
	labeled_statement : CASE . conditional_expression ':' statement  (32)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 168


state 102
	labeled_statement : DEFAULT . ':' statement  (33)

	':'  shift 169
	.  error


state 103
	selection_statement : IF . '(' expression ')' $$9 compound_statement  (35)

	'('  shift 170
	.  error


state 104
	selection_statement : SWITCH . '(' expression ')' $$11 compound_statement  (39)

	'('  shift 171
	.  error


state 105
	iteration_statement : WHILE . '(' expression ')' $$12 statement  (41)

	'('  shift 172
	.  error


state 106
	iteration_statement : DO . statement WHILE '(' expression ')' ';'  (42)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 173
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 107
	iteration_statement : FOR . '(' expression_statement expression_statement ')' statement  (43)
	iteration_statement : FOR . '(' expression_statement expression_statement expression ')' statement  (44)

	'('  shift 174
	.  error


state 108
	jump_statement : CONTINUE . ';'  (45)

	';'  shift 175
	.  error


state 109
	jump_statement : BREAK . ';'  (46)

	';'  shift 176
	.  error


state 110
	jump_statement : RETURN . ';'  (47)
	jump_statement : RETURN . expression ';'  (48)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	';'  shift 177
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 178


state 111
	expression_statement : ';' .  (49)

	.  reduce 49


state 112
	expression : assignment_expression .  (90)

	.  reduce 90


state 113
	expression_statement : expression . ';'  (50)
	expression : expression . ',' assignment_expression  (91)

	';'  shift 179
	','  shift 180
	.  error


state 114
	statement : expression_statement .  (26)

	.  reduce 26


state 115
	compound_list : statement .  (21)

	.  reduce 21


state 116
	statement : compound_statement .  (25)

	.  reduce 25


state 117
	compound_statement : '{' $$7 compound_list . $$8 '}'  (20)
	compound_list : compound_list . statement  (23)
	compound_list : compound_list . declaration  (24)
	$$8 : .  (19)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	'}'  reduce 19

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 181
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121
	declaration  goto 182
	declaration_specifiers  goto 23
	type_specifier  goto 16
	$$8  goto 183


state 118
	statement : selection_statement .  (27)
	selection_statement : selection_statement . ELSE $$10 compound_statement  (37)

	ELSE  shift 184
	IDENTIFIER  reduce 27
	FCONSTANT  reduce 27
	CONSTANT  reduce 27
	CCONSTANT  reduce 27
	STRING_LITERAL  reduce 27
	INC_OP  reduce 27
	DEC_OP  reduce 27
	CHAR  reduce 27
	SHORT  reduce 27
	INT  reduce 27
	LONG  reduce 27
	SIGNED  reduce 27
	UNSIGNED  reduce 27
	FLOAT  reduce 27
	DOUBLE  reduce 27
	CONST  reduce 27
	VOID  reduce 27
	CASE  reduce 27
	DEFAULT  reduce 27
	IF  reduce 27
	SWITCH  reduce 27
	WHILE  reduce 27
	DO  reduce 27
	FOR  reduce 27
	CONTINUE  reduce 27
	BREAK  reduce 27
	RETURN  reduce 27
	FUNCTION  reduce 27
	';'  reduce 27
	'&'  reduce 27
	'+'  reduce 27
	'-'  reduce 27
	'*'  reduce 27
	'{'  reduce 27
	'}'  reduce 27
	'('  reduce 27
	'~'  reduce 27
	'!'  reduce 27


state 119
	statement : jump_statement .  (30)

	.  reduce 30


state 120
	statement : iteration_statement .  (29)

	.  reduce 29


state 121
	statement : labeled_statement .  (28)

	.  reduce 28


state 122
	compound_list : declaration .  (22)

	.  reduce 22


state 123
	function_definition : declaration_specifiers func_definitor declaration_list $$2 compound_statement .  (8)

	.  reduce 8


state 124
	primary_expression : '(' . expression ')'  (151)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 129


state 125
	unary_expression : INC_OP unary_expression .  (133)

	.  reduce 133


state 126
	unary_expression : DEC_OP unary_expression .  (134)

	.  reduce 134


state 127
	initializer_list : initializer .  (88)

	.  reduce 88


state 128
	initializer : '{' initializer_list . '}'  (86)
	initializer : '{' initializer_list . ',' '}'  (87)
	initializer_list : initializer_list . ',' initializer  (89)

	','  shift 185
	'}'  shift 186
	.  error


state 129
	expression : expression . ',' assignment_expression  (91)
	primary_expression : '(' expression . ')'  (151)

	','  shift 180
	')'  shift 187
	.  error


state 130
	cast_expression : '(' type_specifier . ')' cast_expression  (131)

	')'  shift 188
	.  error


state 131
	postfix_expression : postfix_expression INC_OP .  (147)

	.  reduce 147


state 132
	postfix_expression : postfix_expression DEC_OP .  (148)

	.  reduce 148


state 133
	postfix_expression : postfix_expression '(' . ')'  (145)
	postfix_expression : postfix_expression '(' . argument_expression_list ')'  (146)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	')'  shift 189
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 190
	argument_expression_list  goto 191


state 134
	postfix_expression : postfix_expression '[' . expression ']'  (144)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 192


state 135
	unary_expression : unary_operator cast_expression .  (135)

	.  reduce 135


state 136
	assignment_operator : MUL_ASSIGN .  (95)

	.  reduce 95


state 137
	assignment_operator : DIV_ASSIGN .  (96)

	.  reduce 96


state 138
	assignment_operator : MOD_ASSIGN .  (97)

	.  reduce 97


state 139
	assignment_operator : ADD_ASSIGN .  (98)

	.  reduce 98


state 140
	assignment_operator : SUB_ASSIGN .  (99)

	.  reduce 99


state 141
	assignment_operator : '=' .  (94)

	.  reduce 94


state 142
	assignment_expression : unary_expression assignment_operator . assignment_expression  (93)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 193


state 143
	multiplicative_expression : multiplicative_expression '*' . cast_expression  (126)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 194


state 144
	multiplicative_expression : multiplicative_expression '/' . cast_expression  (127)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 195


state 145
	multiplicative_expression : multiplicative_expression '%' . cast_expression  (128)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 196


state 146
	additive_expression : additive_expression '+' . multiplicative_expression  (123)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 197


state 147
	additive_expression : additive_expression '-' . multiplicative_expression  (124)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 198


state 148
	shift_expression : shift_expression LEFT_OP . additive_expression  (121)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 199


state 149
	shift_expression : shift_expression RIGHT_OP . additive_expression  (122)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 200


state 150
	relational_expression : relational_expression LE_OP . shift_expression  (118)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 201


state 151
	relational_expression : relational_expression GE_OP . shift_expression  (119)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 202


state 152
	relational_expression : relational_expression '>' . shift_expression  (117)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 203


state 153
	relational_expression : relational_expression '<' . shift_expression  (116)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 204


state 154
	equality_expression : equality_expression EQ_OP . relational_expression  (113)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 205


state 155
	equality_expression : equality_expression NE_OP . relational_expression  (114)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 206


state 156
	and_expression : and_expression '&' . equality_expression  (111)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 207


state 157
	exclusive_or_expression : exclusive_or_expression '^' . and_expression  (109)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 208


state 158
	inclusive_or_expression : inclusive_or_expression '|' . exclusive_or_expression  (107)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 209


state 159
	logical_and_expression : logical_and_expression AND_OP . inclusive_or_expression  (105)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 210


state 160
	logical_or_expression : logical_or_expression OR_OP . logical_and_expression  (103)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 211


state 161
	conditional_expression : logical_or_expression '?' . expression ':' conditional_expression  (101)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 212


state 162
	direct_declarator : direct_declarator '[' conditional_expression ']' .  (78)

	.  reduce 78


state 163
	parameter_declaration : declaration_specifiers declarator .  (83)

	.  reduce 83


state 164
	func_param_list : '(' $$14 parameter_type_list ')' .  (73)

	.  reduce 73


state 165
	parameter_type_list : parameter_list ',' . ELLIPSIS  (80)
	parameter_list : parameter_list ',' . parameter_declaration  (82)

	CHAR  shift 2
	SHORT  shift 3
	INT  shift 4
	LONG  shift 5
	SIGNED  shift 6
	UNSIGNED  shift 7
	FLOAT  shift 8
	DOUBLE  shift 9
	CONST  shift 10
	VOID  shift 11
	ELLIPSIS  shift 213
	.  error

	declaration_specifiers  goto 95
	type_specifier  goto 16
	parameter_declaration  goto 214


state 166
	compound_statement : '{' $$5 $$6 '}' .  (17)

	.  reduce 17


state 167
	labeled_statement : IDENTIFIER ':' . statement  (31)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 215
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 168
	labeled_statement : CASE conditional_expression . ':' statement  (32)

	':'  shift 216
	.  error


state 169
	labeled_statement : DEFAULT ':' . statement  (33)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 217
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 170
	selection_statement : IF '(' . expression ')' $$9 compound_statement  (35)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 218


state 171
	selection_statement : SWITCH '(' . expression ')' $$11 compound_statement  (39)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 219


state 172
	iteration_statement : WHILE '(' . expression ')' $$12 statement  (41)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 220


state 173
	iteration_statement : DO statement . WHILE '(' expression ')' ';'  (42)

	WHILE  shift 221
	.  error


state 174
	iteration_statement : FOR '(' . expression_statement expression_statement ')' statement  (43)
	iteration_statement : FOR '(' . expression_statement expression_statement expression ')' statement  (44)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 222


state 175
	jump_statement : CONTINUE ';' .  (45)

	.  reduce 45


state 176
	jump_statement : BREAK ';' .  (46)

	.  reduce 46


state 177
	jump_statement : RETURN ';' .  (47)

	.  reduce 47


state 178
	jump_statement : RETURN expression . ';'  (48)
	expression : expression . ',' assignment_expression  (91)

	';'  shift 223
	','  shift 180
	.  error


state 179
	expression_statement : expression ';' .  (50)

	.  reduce 50


state 180
	expression : expression ',' . assignment_expression  (91)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 224


state 181
	compound_list : compound_list statement .  (23)

	.  reduce 23


state 182
	compound_list : compound_list declaration .  (24)

	.  reduce 24


state 183
	compound_statement : '{' $$7 compound_list $$8 . '}'  (20)

	'}'  shift 225
	.  error


state 184
	selection_statement : selection_statement ELSE . $$10 compound_statement  (37)
	$$10 : .  (36)

	.  reduce 36

	$$10  goto 226


state 185
	initializer : '{' initializer_list ',' . '}'  (87)
	initializer_list : initializer_list ',' . initializer  (89)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 71
	'}'  shift 227
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 91
	initializer  goto 228


state 186
	initializer : '{' initializer_list '}' .  (86)

	.  reduce 86


state 187
	primary_expression : '(' expression ')' .  (151)

	.  reduce 151


state 188
	cast_expression : '(' type_specifier ')' . cast_expression  (131)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 229


state 189
	postfix_expression : postfix_expression '(' ')' .  (145)

	.  reduce 145


state 190
	argument_expression_list : assignment_expression .  (149)

	.  reduce 149


state 191
	postfix_expression : postfix_expression '(' argument_expression_list . ')'  (146)
	argument_expression_list : argument_expression_list . ',' assignment_expression  (150)

	','  shift 230
	')'  shift 231
	.  error


state 192
	expression : expression . ',' assignment_expression  (91)
	postfix_expression : postfix_expression '[' expression . ']'  (144)

	','  shift 180
	']'  shift 232
	.  error


state 193
	assignment_expression : unary_expression assignment_operator assignment_expression .  (93)

	.  reduce 93


state 194
	multiplicative_expression : multiplicative_expression '*' cast_expression .  (126)

	.  reduce 126


state 195
	multiplicative_expression : multiplicative_expression '/' cast_expression .  (127)

	.  reduce 127


state 196
	multiplicative_expression : multiplicative_expression '%' cast_expression .  (128)

	.  reduce 128


state 197
	additive_expression : additive_expression '+' multiplicative_expression .  (123)
	multiplicative_expression : multiplicative_expression . '*' cast_expression  (126)
	multiplicative_expression : multiplicative_expression . '/' cast_expression  (127)
	multiplicative_expression : multiplicative_expression . '%' cast_expression  (128)

	'*'  shift 143
	'/'  shift 144
	'%'  shift 145
	LEFT_OP  reduce 123
	RIGHT_OP  reduce 123
	LE_OP  reduce 123
	GE_OP  reduce 123
	EQ_OP  reduce 123
	NE_OP  reduce 123
	AND_OP  reduce 123
	OR_OP  reduce 123
	';'  reduce 123
	','  reduce 123
	'?'  reduce 123
	':'  reduce 123
	'|'  reduce 123
	'^'  reduce 123
	'&'  reduce 123
	'>'  reduce 123
	'<'  reduce 123
	'+'  reduce 123
	'-'  reduce 123
	'}'  reduce 123
	')'  reduce 123
	']'  reduce 123


state 198
	additive_expression : additive_expression '-' multiplicative_expression .  (124)
	multiplicative_expression : multiplicative_expression . '*' cast_expression  (126)
	multiplicative_expression : multiplicative_expression . '/' cast_expression  (127)
	multiplicative_expression : multiplicative_expression . '%' cast_expression  (128)

	'*'  shift 143
	'/'  shift 144
	'%'  shift 145
	LEFT_OP  reduce 124
	RIGHT_OP  reduce 124
	LE_OP  reduce 124
	GE_OP  reduce 124
	EQ_OP  reduce 124
	NE_OP  reduce 124
	AND_OP  reduce 124
	OR_OP  reduce 124
	';'  reduce 124
	','  reduce 124
	'?'  reduce 124
	':'  reduce 124
	'|'  reduce 124
	'^'  reduce 124
	'&'  reduce 124
	'>'  reduce 124
	'<'  reduce 124
	'+'  reduce 124
	'-'  reduce 124
	'}'  reduce 124
	')'  reduce 124
	']'  reduce 124


state 199
	shift_expression : shift_expression LEFT_OP additive_expression .  (121)
	additive_expression : additive_expression . '+' multiplicative_expression  (123)
	additive_expression : additive_expression . '-' multiplicative_expression  (124)

	'+'  shift 146
	'-'  shift 147
	LEFT_OP  reduce 121
	RIGHT_OP  reduce 121
	LE_OP  reduce 121
	GE_OP  reduce 121
	EQ_OP  reduce 121
	NE_OP  reduce 121
	AND_OP  reduce 121
	OR_OP  reduce 121
	';'  reduce 121
	','  reduce 121
	'?'  reduce 121
	':'  reduce 121
	'|'  reduce 121
	'^'  reduce 121
	'&'  reduce 121
	'>'  reduce 121
	'<'  reduce 121
	'}'  reduce 121
	')'  reduce 121
	']'  reduce 121


state 200
	shift_expression : shift_expression RIGHT_OP additive_expression .  (122)
	additive_expression : additive_expression . '+' multiplicative_expression  (123)
	additive_expression : additive_expression . '-' multiplicative_expression  (124)

	'+'  shift 146
	'-'  shift 147
	LEFT_OP  reduce 122
	RIGHT_OP  reduce 122
	LE_OP  reduce 122
	GE_OP  reduce 122
	EQ_OP  reduce 122
	NE_OP  reduce 122
	AND_OP  reduce 122
	OR_OP  reduce 122
	';'  reduce 122
	','  reduce 122
	'?'  reduce 122
	':'  reduce 122
	'|'  reduce 122
	'^'  reduce 122
	'&'  reduce 122
	'>'  reduce 122
	'<'  reduce 122
	'}'  reduce 122
	')'  reduce 122
	']'  reduce 122


state 201
	relational_expression : relational_expression LE_OP shift_expression .  (118)
	shift_expression : shift_expression . LEFT_OP additive_expression  (121)
	shift_expression : shift_expression . RIGHT_OP additive_expression  (122)

	LEFT_OP  shift 148
	RIGHT_OP  shift 149
	LE_OP  reduce 118
	GE_OP  reduce 118
	EQ_OP  reduce 118
	NE_OP  reduce 118
	AND_OP  reduce 118
	OR_OP  reduce 118
	';'  reduce 118
	','  reduce 118
	'?'  reduce 118
	':'  reduce 118
	'|'  reduce 118
	'^'  reduce 118
	'&'  reduce 118
	'>'  reduce 118
	'<'  reduce 118
	'}'  reduce 118
	')'  reduce 118
	']'  reduce 118


state 202
	relational_expression : relational_expression GE_OP shift_expression .  (119)
	shift_expression : shift_expression . LEFT_OP additive_expression  (121)
	shift_expression : shift_expression . RIGHT_OP additive_expression  (122)

	LEFT_OP  shift 148
	RIGHT_OP  shift 149
	LE_OP  reduce 119
	GE_OP  reduce 119
	EQ_OP  reduce 119
	NE_OP  reduce 119
	AND_OP  reduce 119
	OR_OP  reduce 119
	';'  reduce 119
	','  reduce 119
	'?'  reduce 119
	':'  reduce 119
	'|'  reduce 119
	'^'  reduce 119
	'&'  reduce 119
	'>'  reduce 119
	'<'  reduce 119
	'}'  reduce 119
	')'  reduce 119
	']'  reduce 119


state 203
	relational_expression : relational_expression '>' shift_expression .  (117)
	shift_expression : shift_expression . LEFT_OP additive_expression  (121)
	shift_expression : shift_expression . RIGHT_OP additive_expression  (122)

	LEFT_OP  shift 148
	RIGHT_OP  shift 149
	LE_OP  reduce 117
	GE_OP  reduce 117
	EQ_OP  reduce 117
	NE_OP  reduce 117
	AND_OP  reduce 117
	OR_OP  reduce 117
	';'  reduce 117
	','  reduce 117
	'?'  reduce 117
	':'  reduce 117
	'|'  reduce 117
	'^'  reduce 117
	'&'  reduce 117
	'>'  reduce 117
	'<'  reduce 117
	'}'  reduce 117
	')'  reduce 117
	']'  reduce 117


state 204
	relational_expression : relational_expression '<' shift_expression .  (116)
	shift_expression : shift_expression . LEFT_OP additive_expression  (121)
	shift_expression : shift_expression . RIGHT_OP additive_expression  (122)

	LEFT_OP  shift 148
	RIGHT_OP  shift 149
	LE_OP  reduce 116
	GE_OP  reduce 116
	EQ_OP  reduce 116
	NE_OP  reduce 116
	AND_OP  reduce 116
	OR_OP  reduce 116
	';'  reduce 116
	','  reduce 116
	'?'  reduce 116
	':'  reduce 116
	'|'  reduce 116
	'^'  reduce 116
	'&'  reduce 116
	'>'  reduce 116
	'<'  reduce 116
	'}'  reduce 116
	')'  reduce 116
	']'  reduce 116


state 205
	equality_expression : equality_expression EQ_OP relational_expression .  (113)
	relational_expression : relational_expression . '<' shift_expression  (116)
	relational_expression : relational_expression . '>' shift_expression  (117)
	relational_expression : relational_expression . LE_OP shift_expression  (118)
	relational_expression : relational_expression . GE_OP shift_expression  (119)

	LE_OP  shift 150
	GE_OP  shift 151
	'>'  shift 152
	'<'  shift 153
	EQ_OP  reduce 113
	NE_OP  reduce 113
	AND_OP  reduce 113
	OR_OP  reduce 113
	';'  reduce 113
	','  reduce 113
	'?'  reduce 113
	':'  reduce 113
	'|'  reduce 113
	'^'  reduce 113
	'&'  reduce 113
	'}'  reduce 113
	')'  reduce 113
	']'  reduce 113


state 206
	equality_expression : equality_expression NE_OP relational_expression .  (114)
	relational_expression : relational_expression . '<' shift_expression  (116)
	relational_expression : relational_expression . '>' shift_expression  (117)
	relational_expression : relational_expression . LE_OP shift_expression  (118)
	relational_expression : relational_expression . GE_OP shift_expression  (119)

	LE_OP  shift 150
	GE_OP  shift 151
	'>'  shift 152
	'<'  shift 153
	EQ_OP  reduce 114
	NE_OP  reduce 114
	AND_OP  reduce 114
	OR_OP  reduce 114
	';'  reduce 114
	','  reduce 114
	'?'  reduce 114
	':'  reduce 114
	'|'  reduce 114
	'^'  reduce 114
	'&'  reduce 114
	'}'  reduce 114
	')'  reduce 114
	']'  reduce 114


state 207
	and_expression : and_expression '&' equality_expression .  (111)
	equality_expression : equality_expression . EQ_OP relational_expression  (113)
	equality_expression : equality_expression . NE_OP relational_expression  (114)

	EQ_OP  shift 154
	NE_OP  shift 155
	AND_OP  reduce 111
	OR_OP  reduce 111
	';'  reduce 111
	','  reduce 111
	'?'  reduce 111
	':'  reduce 111
	'|'  reduce 111
	'^'  reduce 111
	'&'  reduce 111
	'}'  reduce 111
	')'  reduce 111
	']'  reduce 111


state 208
	exclusive_or_expression : exclusive_or_expression '^' and_expression .  (109)
	and_expression : and_expression . '&' equality_expression  (111)

	'&'  shift 156
	AND_OP  reduce 109
	OR_OP  reduce 109
	';'  reduce 109
	','  reduce 109
	'?'  reduce 109
	':'  reduce 109
	'|'  reduce 109
	'^'  reduce 109
	'}'  reduce 109
	')'  reduce 109
	']'  reduce 109


state 209
	inclusive_or_expression : inclusive_or_expression '|' exclusive_or_expression .  (107)
	exclusive_or_expression : exclusive_or_expression . '^' and_expression  (109)

	'^'  shift 157
	AND_OP  reduce 107
	OR_OP  reduce 107
	';'  reduce 107
	','  reduce 107
	'?'  reduce 107
	':'  reduce 107
	'|'  reduce 107
	'}'  reduce 107
	')'  reduce 107
	']'  reduce 107


state 210
	logical_and_expression : logical_and_expression AND_OP inclusive_or_expression .  (105)
	inclusive_or_expression : inclusive_or_expression . '|' exclusive_or_expression  (107)

	'|'  shift 158
	AND_OP  reduce 105
	OR_OP  reduce 105
	';'  reduce 105
	','  reduce 105
	'?'  reduce 105
	':'  reduce 105
	'}'  reduce 105
	')'  reduce 105
	']'  reduce 105


state 211
	logical_or_expression : logical_or_expression OR_OP logical_and_expression .  (103)
	logical_and_expression : logical_and_expression . AND_OP inclusive_or_expression  (105)

	AND_OP  shift 159
	OR_OP  reduce 103
	';'  reduce 103
	','  reduce 103
	'?'  reduce 103
	':'  reduce 103
	'}'  reduce 103
	')'  reduce 103
	']'  reduce 103


state 212
	expression : expression . ',' assignment_expression  (91)
	conditional_expression : logical_or_expression '?' expression . ':' conditional_expression  (101)

	','  shift 180
	':'  shift 233
	.  error


state 213
	parameter_type_list : parameter_list ',' ELLIPSIS .  (80)

	.  reduce 80


state 214
	parameter_list : parameter_list ',' parameter_declaration .  (82)

	.  reduce 82


state 215
	labeled_statement : IDENTIFIER ':' statement .  (31)

	.  reduce 31


state 216
	labeled_statement : CASE conditional_expression ':' . statement  (32)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 234
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 217
	labeled_statement : DEFAULT ':' statement .  (33)

	.  reduce 33


state 218
	selection_statement : IF '(' expression . ')' $$9 compound_statement  (35)
	expression : expression . ',' assignment_expression  (91)

	','  shift 180
	')'  shift 235
	.  error


state 219
	selection_statement : SWITCH '(' expression . ')' $$11 compound_statement  (39)
	expression : expression . ',' assignment_expression  (91)

	','  shift 180
	')'  shift 236
	.  error


state 220
	iteration_statement : WHILE '(' expression . ')' $$12 statement  (41)
	expression : expression . ',' assignment_expression  (91)

	','  shift 180
	')'  shift 237
	.  error


state 221
	iteration_statement : DO statement WHILE . '(' expression ')' ';'  (42)

	'('  shift 238
	.  error


state 222
	iteration_statement : FOR '(' expression_statement . expression_statement ')' statement  (43)
	iteration_statement : FOR '(' expression_statement . expression_statement expression ')' statement  (44)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 239


state 223
	jump_statement : RETURN expression ';' .  (48)

	.  reduce 48


state 224
	expression : expression ',' assignment_expression .  (91)

	.  reduce 91


state 225
	compound_statement : '{' $$7 compound_list $$8 '}' .  (20)

	.  reduce 20


state 226
	selection_statement : selection_statement ELSE $$10 . compound_statement  (37)

	'{'  shift 40
	.  error

	compound_statement  goto 240


state 227
	initializer : '{' initializer_list ',' '}' .  (87)

	.  reduce 87


state 228
	initializer_list : initializer_list ',' initializer .  (89)

	.  reduce 89


state 229
	cast_expression : '(' type_specifier ')' cast_expression .  (131)

	.  reduce 131


state 230
	argument_expression_list : argument_expression_list ',' . assignment_expression  (150)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 241


state 231
	postfix_expression : postfix_expression '(' argument_expression_list ')' .  (146)

	.  reduce 146


state 232
	postfix_expression : postfix_expression '[' expression ']' .  (144)

	.  reduce 144


state 233
	conditional_expression : logical_or_expression '?' expression ':' . conditional_expression  (101)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 93
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 242


state 234
	labeled_statement : CASE conditional_expression ':' statement .  (32)

	.  reduce 32


state 235
	selection_statement : IF '(' expression ')' . $$9 compound_statement  (35)
	$$9 : .  (34)

	.  reduce 34

	$$9  goto 243


state 236
	selection_statement : SWITCH '(' expression ')' . $$11 compound_statement  (39)
	$$11 : .  (38)

	.  reduce 38

	$$11  goto 244


state 237
	iteration_statement : WHILE '(' expression ')' . $$12 statement  (41)
	$$12 : .  (40)

	.  reduce 40

	$$12  goto 245


state 238
	iteration_statement : DO statement WHILE '(' . expression ')' ';'  (42)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 246


state 239
	iteration_statement : FOR '(' expression_statement expression_statement . ')' statement  (43)
	iteration_statement : FOR '(' expression_statement expression_statement . expression ')' statement  (44)

	IDENTIFIER  shift 59
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	FUNCTION  shift 66
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'('  shift 72
	')'  shift 247
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 248


state 240
	selection_statement : selection_statement ELSE $$10 compound_statement .  (37)

	.  reduce 37


state 241
	argument_expression_list : argument_expression_list ',' assignment_expression .  (150)

	.  reduce 150


state 242
	conditional_expression : logical_or_expression '?' expression ':' conditional_expression .  (101)

	.  reduce 101


state 243
	selection_statement : IF '(' expression ')' $$9 . compound_statement  (35)

	'{'  shift 40
	.  error

	compound_statement  goto 249


state 244
	selection_statement : SWITCH '(' expression ')' $$11 . compound_statement  (39)

	'{'  shift 40
	.  error

	compound_statement  goto 250


state 245
	iteration_statement : WHILE '(' expression ')' $$12 . statement  (41)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 251
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 246
	iteration_statement : DO statement WHILE '(' expression . ')' ';'  (42)
	expression : expression . ',' assignment_expression  (91)

	','  shift 180
	')'  shift 252
	.  error


state 247
	iteration_statement : FOR '(' expression_statement expression_statement ')' . statement  (43)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 253
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 248
	iteration_statement : FOR '(' expression_statement expression_statement expression . ')' statement  (44)
	expression : expression . ',' assignment_expression  (91)

	','  shift 180
	')'  shift 254
	.  error


state 249
	selection_statement : IF '(' expression ')' $$9 compound_statement .  (35)

	.  reduce 35


state 250
	selection_statement : SWITCH '(' expression ')' $$11 compound_statement .  (39)

	.  reduce 39


state 251
	iteration_statement : WHILE '(' expression ')' $$12 statement .  (41)

	.  reduce 41


state 252
	iteration_statement : DO statement WHILE '(' expression ')' . ';'  (42)

	';'  shift 255
	.  error


state 253
	iteration_statement : FOR '(' expression_statement expression_statement ')' statement .  (43)

	.  reduce 43


state 254
	iteration_statement : FOR '(' expression_statement expression_statement expression ')' . statement  (44)

	IDENTIFIER  shift 100
	FCONSTANT  shift 60
	CONSTANT  shift 61
	CCONSTANT  shift 62
	STRING_LITERAL  shift 63
	INC_OP  shift 64
	DEC_OP  shift 65
	CASE  shift 101
	DEFAULT  shift 102
	IF  shift 103
	SWITCH  shift 104
	WHILE  shift 105
	DO  shift 106
	FOR  shift 107
	CONTINUE  shift 108
	BREAK  shift 109
	RETURN  shift 110
	FUNCTION  shift 66
	';'  shift 111
	'&'  shift 67
	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'{'  shift 40
	'('  shift 72
	'~'  shift 73
	'!'  shift 74
	.  error

	primary_expression  goto 75
	postfix_expression  goto 76
	unary_operator  goto 77
	unary_expression  goto 78
	cast_expression  goto 79
	multiplicative_expression  goto 80
	additive_expression  goto 81
	shift_expression  goto 82
	relational_expression  goto 83
	equality_expression  goto 84
	and_expression  goto 85
	exclusive_or_expression  goto 86
	inclusive_or_expression  goto 87
	logical_and_expression  goto 88
	logical_or_expression  goto 89
	conditional_expression  goto 90
	assignment_expression  goto 112
	expression  goto 113
	expression_statement  goto 114
	statement  goto 256
	compound_statement  goto 116
	selection_statement  goto 118
	jump_statement  goto 119
	iteration_statement  goto 120
	labeled_statement  goto 121


state 255
	iteration_statement : DO statement WHILE '(' expression ')' ';' .  (42)

	.  reduce 42


state 256
	iteration_statement : FOR '(' expression_statement expression_statement expression ')' statement .  (44)

	.  reduce 44


90 terminals, 61 nonterminals
157 grammar rules, 257 states
